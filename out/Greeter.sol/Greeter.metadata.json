{
  "compiler": {
    "version": "0.8.14+commit.80d49f37"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_greeting",
            "type": "string"
          },
          {
            "internalType": "contract IERC20",
            "name": "_token",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "Greeter_InvalidGreeting",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Greeter_OnlyOwner",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "_greeting",
            "type": "string"
          }
        ],
        "name": "GreetingSet",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "OWNER",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "greet",
        "outputs": [
          {
            "internalType": "string",
            "name": "_greeting",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "_balance",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "greeting",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_greeting",
            "type": "string"
          }
        ],
        "name": "setGreeting",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "token",
        "outputs": [
          {
            "internalType": "contract IERC20",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "errors": {
        "Greeter_InvalidGreeting()": [
          {
            "details": "Empty string is an invalid greeting"
          }
        ]
      },
      "kind": "dev",
      "methods": {
        "constructor": {
          "params": {
            "_greeting": "Initial greeting",
            "_token": "Initial token"
          }
        },
        "greet()": {
          "returns": {
            "_balance": " Current token balance of the caller",
            "_greeting": "The greeting"
          }
        },
        "setGreeting(string)": {
          "details": "Only callable by the owner",
          "params": {
            "_newGreeting": "The new greeting to be set"
          }
        }
      },
      "stateVariables": {
        "OWNER": {
          "details": "The owner will always be the deployer of the contract",
          "return": "The owner of the contract",
          "returns": {
            "_0": "The owner of the contract"
          }
        },
        "_EMPTY_STRING": {
          "details": "result of doing keccak256(bytes(''))"
        },
        "greeting": {
          "return": "The greeting",
          "returns": {
            "_0": "The greeting"
          }
        },
        "token": {
          "return": "The address of the token",
          "returns": {
            "_0": "The address of the token"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "errors": {
        "Greeter_InvalidGreeting()": [
          {
            "notice": "Throws if the greeting set is invalid"
          }
        ],
        "Greeter_OnlyOwner()": [
          {
            "notice": "Throws if the function was called by someone else than the owner"
          }
        ]
      },
      "events": {
        "GreetingSet(string)": {
          "notice": "Greeting has changed"
        }
      },
      "kind": "user",
      "methods": {
        "OWNER()": {
          "notice": "Returns the owner of the contract"
        },
        "constructor": {
          "notice": "Defines the owner to the msg.sender and sets the initial greeting"
        },
        "greet()": {
          "notice": "Returns set previously set greeting"
        },
        "greeting()": {
          "notice": "Returns the greeting"
        },
        "setGreeting(string)": {
          "notice": "Sets a new greeting"
        },
        "token()": {
          "notice": "Returns the token used to greet callers"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "solidity/contracts/Greeter.sol": "Greeter"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 10000
    },
    "remappings": [
      ":contracts/=solidity/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":interfaces/=solidity/interfaces/",
      ":isolmate/=lib/isolmate/src/",
      ":prb-test/=lib/prb-test/src/",
      ":prb/test/=lib/prb-test/src/",
      ":test/=solidity/test/"
    ]
  },
  "sources": {
    "lib/isolmate/src/interfaces/tokens/IERC20.sol": {
      "keccak256": "0xea23a986a9efba47639b24eae7dbfd6936be01e5fc3530202fe1f4b8bb4131b8",
      "license": "AGPL-3.0-only",
      "urls": [
        "bzz-raw://37e08545e18de038023d32de846032533af9513c0b7b84a6c5c371941b6bd5f7",
        "dweb:/ipfs/QmRYNSXwiJ9wE36ogE5J77g6pbGK7T7qqqAF99DZq3eW5B"
      ]
    },
    "solidity/contracts/Greeter.sol": {
      "keccak256": "0xf35c1030d8a14bc0966b1d9fb5bc404459b121ad04e47492f8c198cd597198e3",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://393f6c472e71e78f161ff26e2c04aad55698fcd7a37c08d95b3f2b82bda8d243",
        "dweb:/ipfs/QmboJtWDxDPboMSsPHbJhsAhyz5W9LdvasXFCHrv8jirMt"
      ]
    },
    "solidity/interfaces/IGreeter.sol": {
      "keccak256": "0xebee665ef97986d153d07e130adf174e58304e7e41c257b0155df431f7e73b61",
      "license": "MIT",
      "urls": [
        "bzz-raw://c5a8519861ef378576638c7a2c07150e19fe86ee5a1318900c42f0a63a8acf07",
        "dweb:/ipfs/QmPH9x8XzXW1RrZXx9AUYYxwjFx4WyPRRuqd7ujnksR7Fd"
      ]
    }
  },
  "version": 1
}